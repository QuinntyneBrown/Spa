import { Injectable, Inject } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { {{ entityNamePascalCase }} } from '@api';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';
import { BASE_URL } from '@core';

@Injectable({
  providedIn: 'root'
})
export class {{ entityNamePascalCase }}Service {

  constructor(
    @Inject(BASE_URL) private readonly _baseUrl: string,
    private readonly _client: HttpClient
  ) { }

  public get(): Observable<{{ entityNamePascalCase }}[]> {
    return this._client.get<{ {{ entityNameCamelCasePlural }}: {{ entityNamePascalCase }}[] }>(`${this._baseUrl}api/{{ entityNameCamelCase }}`)
      .pipe(
        map(x => x.{{ entityNameCamelCasePlural }})
      );
  }

  public getById(options: { {{ entityNameCamelCase }}Id: string }): Observable<{{ entityNamePascalCase }}> {
    return this._client.get<{ {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }>(`${this._baseUrl}api/{{ entityNameCamelCase }}/${options.{{ entityNameCamelCase }}Id}`)
      .pipe(
        map(x => x.{{ entityNameCamelCase }})
      );
  }

  public remove(options: { {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }): Observable<void> {
    return this._client.delete<void>(`${this._baseUrl}api/{{ entityNameCamelCase }}/${options.{{ entityNameCamelCase }}.{{ entityNameCamelCase }}Id}`);
  }

  public create(options: { {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }): Observable<{ {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }> {
    return this._client.post<{ {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }>(`${this._baseUrl}api/{{ entityNameCamelCase }}`, { {{ entityNameCamelCase }}: options.{{ entityNameCamelCase }} });
  }
  
  public update(options: { {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }): Observable<{ {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }> {
    return this._client.put<{ {{ entityNameCamelCase }}: {{ entityNamePascalCase }} }>(`${this._baseUrl}api/{{ entityNameCamelCase }}`, { {{ entityNameCamelCase }}: options.{{ entityNameCamelCase }} });
  }
}
